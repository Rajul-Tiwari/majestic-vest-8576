package com.masai.controller;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;
import com.masai.services.*;
import com.masai.exception.ActivityException;
import com.masai.exception.AdminException;
import com.masai.model.*;
import io.swagger.v3.oas.annotations.parameters.RequestBody;
@RestController
public class AdminController {
     
	      @Autowired
	      private AdminService adminService;
	@PostMapping("/insertadmins")
	    public ResponseEntity<Admin> insertAdminHandler(@Valid @RequestBody Admin admin){
	    	
	    	               Admin ad= adminService.insertAdmin(admin);
	    	return new ResponseEntity<Admin>(ad,HttpStatus.ACCEPTED);
	    }
	      
	@PutMapping("/updateadmins")
    public ResponseEntity<Admin> updateAdminHandler(@RequestBody Admin admin) throws AdminException{
    	
    	               Admin ad= adminService.updateAdmin(admin);
    	return new ResponseEntity<Admin>(ad,HttpStatus.ACCEPTED);
    }  
	
	@DeleteMapping("/deleteadmin/{id}")
    public ResponseEntity<Admin> deleteAdminHandler(@PathVariable("id") Integer id) throws AdminException{
    	
    	               Admin ad= adminService.deleteAdmin(id);
    	return new ResponseEntity<Admin>(ad,HttpStatus.ACCEPTED);
    }
	@GetMapping("/getactivity/{id}")
    public ResponseEntity<List<Activity>> getAllActivityByCustomerIdHandler(@PathVariable("id") Integer id) throws ActivityException{
    	
    	           List<Activity> activities= adminService.getAllActivities(id);
    	return new ResponseEntity<List<Activity>>(activities,HttpStatus.ACCEPTED);
    }
	@GetMapping("/getactivity")
    public ResponseEntity<List<Activity>> getAllActivityHandler() throws ActivityException{
    	
    	           List<Activity> activities= adminService.getAllActivities();
    	return new ResponseEntity<List<Activity>>(activities,HttpStatus.ACCEPTED);
	}
	@GetMapping("/getactivity/{date}")
    public ResponseEntity<List<Activity>> getAllActivityBByDateHandler(@PathVariable("date") LocalDateTime date) throws ActivityException{
    	
    	           List<Activity> activities= adminService.getActivitiesDatewise(date);
    	return new ResponseEntity<List<Activity>>(activities,HttpStatus.ACCEPTED);
    }
}
